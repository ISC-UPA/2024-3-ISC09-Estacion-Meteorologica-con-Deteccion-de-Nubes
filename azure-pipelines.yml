trigger:
- develop

resources:
- repo: self

pool:
  name: 'Self-Hosted-Pool'

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build and Push Docker Image
  jobs:
  - job: Build
    displayName: Build
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: '$(acrUser)'
        repository: 'cloudy-api'
        command: 'build'
        Dockerfile: '**/Dockerfile'
        arguments: '-t cloudy-api'
    - task: Docker@2
      inputs:
        containerRegistry: $(acrUser)
        repository: 'cloudy-api'
        command: 'tag'
        arguments: 'cloudy-api:latest cloudycontainerregistry.azurecr.io/cloudy-api:latest'
        addPipelineData: false
        addBaseImageData: false
    - task: Docker@2
      displayName: Push an image
      inputs:
        containerRegistry: $(acrUser)
        repository: 'cloudy-api'
        command: 'push'
        tags: 'cloudycontainerregistry.azurecr.io/cloudy-api:latest'
        addPipelineData: false
        addBaseImageData: false
- stage: Deploy
  displayName: Deploy to Azure Web
  dependsOn: Build
  jobs:
  - job: Deploy
    displayName: Deploy
    steps:
    - task: AzureWebAppContainer@1
      inputs:
        azureSubscription: $(azureSub)
        appName: 'Cloudy-api'
        deployToSlotOrASE: true
        resourceGroupName: 'Cloudy'
        slotName: 'production'
        containers: 'cloudycontainerregistry.azurecr.io/cloudy-api:latest'
        containerCommand: 'docker run --workdir=/app -p 443:3000'
        acrUsername: $(acrUser)
        acrPassword: $(acrPas)